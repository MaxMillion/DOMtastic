{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","../src/array.js","../src/attr.js","../src/class.js","../src/contains.js","../src/css.js","../src/data.js","../src/dom.js","../src/dom_extra.js","../src/event.js","../src/html.js","../src/index.full.js","../src/mode.js","../src/noconflict.js","../src/ready.js","../src/selector.js","../src/selector_extra.js","../src/trigger.js","../src/type.js","../src/util.js"],"names":[],"mappings":"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","file":"domtastic.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * @module Array\n */\n\nimport { each as _each, toArray } from './util';\nimport { $, matches } from './selector';\n\nvar ArrayProto = Array.prototype;\n\n/**\n * Checks if the given callback returns a true(-ish) value for each element in the collection.\n *\n * @param {Function} callback Function to execute for each element, invoked with `element` as argument.\n * @param {Object} [thisArg] Value to use as `this` when executing `callback`.\n * @return {Boolean} Whether each element passed the callback check.\n * @example\n *     $('.items').every(function(element) {\n *         return element.hasAttribute('active')\n *     });\n *     ➤ true/false\n */\n\nvar every = ArrayProto.every;\n\n/**\n * Filter the collection by selector or function, and return a new collection with the result.\n *\n * @param {String|Function} selector Selector or function to filter the collection.\n * @param {Object} [thisArg] Value to use as `this` when executing `callback`.\n * @return {Object} A new wrapped collection\n * @chainable\n * @example\n *     $('.items').filter('.active');\n * @example\n *     $('.items').filter(function(element) {\n *         return element.hasAttribute('active')\n *     });\n */\n\nfunction filter(selector, thisArg) {\n    var callback = typeof selector === 'function' ? selector : function(element) {\n        return matches(element, selector);\n    };\n    return $(ArrayProto.filter.call(this, callback, thisArg));\n}\n\n/**\n * Execute a function for each element in the collection.\n *\n * @param {Function} callback Function to execute for each element, invoked with `element` as argument.\n * @param {Object} [thisArg] Value to use as `this` when executing `callback`.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').forEach(function(element) {\n *         element.style.color = 'evergreen';\n *     );\n */\n\nfunction forEach(callback, thisArg) {\n    return _each(this, callback, thisArg);\n}\n\nvar each = forEach;\n\n/**\n * Returns the index of an element in the collection.\n *\n * @param {Node} element\n * @return {Number} The zero-based index, -1 if not found.\n * @example\n *     $('.items').indexOf(element);\n *     ➤ 2\n */\n\nvar indexOf = ArrayProto.indexOf;\n\n/**\n * Create a new collection by executing the callback for each element in the collection.\n *\n * @param {Function} callback Function to execute for each element, invoked with `element` as argument.\n * @param {Object} [thisArg] Value to use as `this` when executing `callback`.\n * @return {Array} Collection with the return value of the executed callback for each element.\n * @example\n *     $('.items').map(function(element) {\n *         return element.getAttribute('name')\n *     });\n *     ➤ ['ever', 'green']\n */\n\nvar map = ArrayProto.map;\n\n/**\n * Removes the last element from the collection, and returns that element.\n *\n * @return {Object} The last element from the collection.\n * @example\n *     var lastElement = $('.items').pop();\n */\n\nvar pop = ArrayProto.pop;\n\n/**\n * Adds one or more elements to the end of the collection, and returns the new length of the collection.\n *\n * @param {Object} element Element(s) to add to the collection\n * @return {Number} The new length of the collection\n * @example\n *     $('.items').push(element);\n */\n\nvar push = ArrayProto.push;\n\n/**\n * Reverses an array in place. The first array element becomes the last and the last becomes the first.\n *\n * @return {Object} The wrapped collection, reversed\n * @chainable\n * @example\n *     $('.items').reverse();\n */\n\nfunction reverse() {\n    return $(toArray(this).reverse());\n}\n\n/**\n * Removes the first element from the collection, and returns that element.\n *\n * @return {Object} The first element from the collection.\n * @example\n *     var firstElement = $('.items').shift();\n */\n\nvar shift = ArrayProto.shift;\n\n/**\n * Checks if the given callback returns a true(-ish) value for any of the elements in the collection.\n *\n * @param {Function} callback Function to execute for each element, invoked with `element` as argument.\n * @return {Boolean} Whether any element passed the callback check.\n * @example\n *     $('.items').some(function(element) {\n *         return element.hasAttribute('active')\n *     });\n *     ➤ true/false\n */\n\nvar some = ArrayProto.some;\n\n/**\n * Adds one or more elements to the beginning of the collection, and returns the new length of the collection.\n *\n * @param {Object} element Element(s) to add to the collection\n * @return {Number} The new length of the collection\n * @example\n *     $('.items').unshift(element);\n */\n\nvar unshift = ArrayProto.unshift;\n\n/*\n * Export interface\n */\n\nexport { each, every, filter, forEach, indexOf, map, pop, push, reverse, shift, some, unshift };\n","/**\n * @module Attr\n */\n\nimport { each } from './util';\n\n/**\n * Get the value of an attribute for the first element, or set one or more attributes for each element in the collection.\n *\n * @param {String|Object} key The name of the attribute to get or set. Or an object containing key-value pairs to set as attributes.\n * @param {String} [value] The value of the attribute to set.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').attr('attrName'); // get\n *     $('.item').attr('attrName', 'attrValue'); // set\n *     $('.item').attr({'attr1', 'value1'}, {'attr2', 'value2}); // set multiple\n */\n\nfunction attr(key, value) {\n\n    if (typeof key === 'string' && typeof value === 'undefined') {\n        var element = this.nodeType ? this : this[0];\n        return element ? element.getAttribute(key) : undefined;\n    }\n\n    each(this, function(element) {\n        if (typeof key === 'object') {\n            for (var attr in key) {\n                element.setAttribute(attr, key[attr]);\n            }\n        } else {\n            element.setAttribute(key, value);\n        }\n    });\n\n    return this;\n}\n\n/**\n * Remove attribute from each element in the collection.\n *\n * @param {String} key Attribute name\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').removeAttr('attrName');\n */\n\nfunction removeAttr(key) {\n    each(this, function(element) {\n        element.removeAttribute(key);\n    });\n    return this;\n}\n\n/*\n * Export interface\n */\n\nexport { attr, removeAttr };\n","/**\n * @module Class\n */\n\nimport { makeIterable, each } from './util';\n\n/**\n * Add a class to the element(s)\n *\n * @param {String} value Space-separated class name(s) to add to the element(s).\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').addClass('bar');\n *     $('.item').addClass('bar foo');\n */\n\nfunction addClass(value) {\n    if(value && value.length) {\n        each(value.split(' '), function(className) {\n            each(this, function(element) {\n                element.classList.add(className);\n            });\n        }.bind(this));\n    }\n    return this;\n}\n\n/**\n * Remove a class from the element(s)\n *\n * @param {String} value Space-separated class name(s) to remove from the element(s).\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').removeClass('bar');\n *     $('.items').removeClass('bar foo');\n */\n\nfunction removeClass(value) {\n    if(value && value.length) {\n        each(value.split(' '), function(className) {\n            each(this, function(element) {\n                element.classList.remove(className);\n            });\n        }.bind(this));\n    }\n    return this;\n}\n\n/**\n * Toggle a class at the element(s)\n *\n * @param {String} value Space-separated class name(s) to toggle at the element(s).\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').toggleClass('bar');\n *     $('.item').toggleClass('bar foo');\n */\n\nfunction toggleClass(value) {\n    if(value && value.length) {\n        each(value.split(' '), function(className) {\n            each(this, function(element) {\n                element.classList.toggle(className);\n            });\n        }.bind(this));\n    }\n    return this;\n}\n\n/**\n * Check if the element(s) have a class.\n *\n * @param {String} value Check if the DOM element contains the class name. When applied to multiple elements,\n * returns `true` if _any_ of them contains the class name.\n * @return {Boolean} Whether the element's class attribute contains the class name.\n * @example\n *     $('.item').hasClass('bar');\n */\n\nfunction hasClass(value) {\n    return makeIterable(this).some(function(element) {\n        return element.classList.contains(value);\n    });\n}\n\n/*\n * Export interface\n */\n\nexport { addClass, removeClass, toggleClass, hasClass };\n","/**\n * @module contains\n */\n\n/**\n * Test whether an element contains another element in the DOM.\n *\n * @param {Element} container The element that may contain the other element.\n * @param {Element} element The element that may be a descendant of the other element.\n * @return {Boolean} Whether the `container` element contains the `element`.\n * @example\n *     $.contains(parentElement, childElement);\n *     ➤ true/false\n */\n\nfunction contains(container, element) {\n    if(!container || !element || container === element) {\n        return false;\n    } else if (container.contains) {\n        return container.contains(element);\n    } else if (container.compareDocumentPosition) {\n        return !(container.compareDocumentPosition(element) & Node.DOCUMENT_POSITION_DISCONNECTED);\n    }\n    return false;\n}\n\n\n/*\n * Export interface\n */\n\nexport { contains };\n","/**\n * @module Attr\n */\n\nimport { each } from './util';\n\nfunction isNumeric(value) {\n    return !isNaN(parseFloat(value)) && isFinite(value);\n}\n\nfunction camelize(value) {\n    return value.replace(/-([\\da-z])/gi, function (matches, letter) { return letter.toUpperCase(); });\n}\n\nfunction dasherize(value) {\n    return value.replace(/([a-z\\d])([A-Z])/g, '$1-$2').toLowerCase();\n}\n\n/**\n * Get the value of a style property for the first element, or set one or more style properties for each element in the collection.\n *\n * @param {String|Object} key The name of the style property to get or set. Or an object containing key-value pairs to set as style properties.\n * @param {String} [value] The value of the style property to set.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').css('padding-left'); // get\n *     $('.item').css('color', '#f00'); // set\n *     $('.item').css({'border-width', '1px'}, {'display', 'inline-block}); // set multiple\n */\n\nfunction css(key, value) {\n\n    var styleProps, prop, val;\n\n    if(typeof key === 'string') {\n        key = camelize(key);\n\n        if (typeof value === 'undefined') {\n            var element = this.nodeType ? this : this[0];\n            if(element) {\n                val = element.style[key];\n                return isNumeric(val) ? parseFloat(val) : val;\n            }\n            return undefined;\n        }\n\n        styleProps = {};\n        styleProps[key] = value;\n    } else {\n        styleProps = key;\n        for (prop in styleProps) {\n            val = styleProps[prop];\n            delete styleProps[prop];\n            styleProps[camelize(prop)] = val;\n        }\n    }\n\n    each(this, function(element) {\n        for (prop in styleProps) {\n            if(styleProps[prop] || styleProps[prop] === 0) {\n                element.style[prop] = styleProps[prop];\n            } else {\n                element.style.removeProperty(dasherize(prop));\n            }\n        }\n    });\n\n    return this;\n}\n\n/*\n * Export interface\n */\n\nexport { css };\n","/**\n * @module Data\n */\n\nimport { each } from './util';\n\nvar dataKeyProp = '__domtastic_data__';\n\n/**\n * Get data from first element, or set data for each element in the collection.\n *\n * @param {String} key The key for the data to get or set.\n * @param {String} [value] The data to set.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').data('attrName'); // get\n *     $('.item').data('attrName', {any: 'data'}); // set\n */\n\nfunction data(key, value) {\n\n    if (typeof key === 'string' && typeof value === 'undefined') {\n        var element = this.nodeType ? this : this[0];\n        return element && element[dataKeyProp] ? element[dataKeyProp][key] : undefined;\n    }\n\n    each(this, function(element) {\n        element[dataKeyProp] = element[dataKeyProp] || {};\n        element[dataKeyProp][key] = value;\n    });\n\n    return this;\n\n}\n\n/**\n * Get property from first element, or set property on each element in the collection.\n *\n * @param {String} key The name of the property to get or set.\n * @param {String} [value] The value of the property to set.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').prop('attrName'); // get\n *     $('.item').prop('attrName', 'attrValue'); // set\n */\n\nfunction prop(key, value) {\n\n    if (typeof key === 'string' && typeof value === 'undefined') {\n        var element = this.nodeType ? this : this[0];\n        return element && element ? element[key] : undefined;\n    }\n\n    each(this, function(element) {\n        element[key] = value;\n    });\n\n    return this;\n\n}\n\n\n/*\n * Export interface\n */\n\nexport { data, prop }","/**\n * @module DOM\n */\n\nimport { toArray } from './util';\n\n/**\n * Append element(s) to each element in the collection.\n *\n * @param {String|Node|NodeList|Object} element What to append to the element(s).\n * Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').append('<p>more</p>');\n */\n\nfunction append(element) {\n    if (this instanceof Node) {\n        if (typeof element === 'string') {\n            this.insertAdjacentHTML('beforeend', element);\n        } else {\n            if (element instanceof Node) {\n                this.appendChild(element);\n            } else {\n                var elements = element instanceof NodeList ? toArray(element) : element;\n                elements.forEach(this.appendChild.bind(this));\n            }\n        }\n    } else {\n        var l = this.length;\n        while (l--) {\n            var elm = l === 0 ? element : _clone(element);\n            append.call(this[l], elm);\n        }\n    }\n    return this;\n}\n\n/**\n * Place element(s) at the beginning of each element in the collection.\n *\n * @param {String|Node|NodeList|Object} element What to place at the beginning of the element(s).\n * Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').prepend('<span>start</span>');\n */\n\nfunction prepend(element) {\n    if (this instanceof Node) {\n        if (typeof element === 'string') {\n            this.insertAdjacentHTML('afterbegin', element);\n        } else {\n            if (element instanceof Node) {\n                this.insertBefore(element, this.firstChild);\n            } else {\n                var elements = element instanceof NodeList ? toArray(element) : element;\n                elements.reverse().forEach(prepend.bind(this));\n            }\n        }\n    } else {\n        var l = this.length;\n        while (l--) {\n            var elm = l === 0 ? element : _clone(element);\n            prepend.call(this[l], elm);\n        }\n    }\n    return this;\n}\n\n/**\n * Place element(s) before each element in the collection.\n *\n * @param {String|Node|NodeList|Object} element What to place as sibling(s) before to the element(s).\n * Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').before('<p>prefix</p>');\n */\n\nfunction before(element) {\n    if (this instanceof Node) {\n        if (typeof element === 'string') {\n            this.insertAdjacentHTML('beforebegin', element);\n        } else {\n            if (element instanceof Node) {\n                this.parentNode.insertBefore(element, this);\n            } else {\n                var elements = element instanceof NodeList ? toArray(element) : element;\n                elements.forEach(before.bind(this));\n            }\n        }\n    } else {\n        var l = this.length;\n        while (l--) {\n            var elm = l === 0 ? element : _clone(element);\n            before.call(this[l], elm);\n        }\n    }\n    return this;\n}\n\n/**\n * Place element(s) after each element in the collection.\n *\n * @param {String|Node|NodeList|Object} element What to place as sibling(s) after to the element(s). Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').after('<span>suf</span><span>fix</span>');\n */\n\nfunction after(element) {\n    if (this instanceof Node) {\n        if (typeof element === 'string') {\n            this.insertAdjacentHTML('afterend', element);\n        } else {\n            if (element instanceof Node) {\n                this.parentNode.insertBefore(element, this.nextSibling);\n            } else {\n                var elements = element instanceof NodeList ? toArray(element) : element;\n                elements.reverse().forEach(after.bind(this));\n            }\n        }\n    } else {\n        var l = this.length;\n        while (l--) {\n            var elm = l === 0 ? element : _clone(element);\n            after.call(this[l], elm);\n        }\n    }\n    return this;\n}\n\n/**\n * Clone a wrapped object.\n *\n * @return {Object} Wrapped collection of cloned nodes.\n * @example\n *     $(element).clone();\n */\n\nfunction clone() {\n    return $(_clone(this));\n}\n\n/**\n * Clone an object\n *\n * @param {String|Node|NodeList|Array} element The element(s) to clone.\n * @return {String|Node|NodeList|Array} The cloned element(s)\n * @private\n */\n\nfunction _clone(element) {\n    if (typeof element === 'string') {\n        return element;\n    } else if (element instanceof Node) {\n        return element.cloneNode(true);\n    } else if ('length' in element) {\n        return [].map.call(element, function(el) {\n            return el.cloneNode(true);\n        });\n    }\n    return element;\n}\n\n/*\n * Export interface\n */\n\nexport { append, prepend, before, after, clone };\n","/**\n * @module DOM (extra)\n */\n\nimport { each } from './util';\nimport { append, before, after } from './dom';\nimport { $ } from './selector';\n\n/**\n * Append each element in the collection to the specified element(s).\n *\n * @param {Node|NodeList|Object} element What to append the element(s) to. Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').appendTo(container);\n */\n\nfunction appendTo(element) {\n    var context = typeof element === 'string' ? $(element) : element;\n    append.call(context, this);\n    return this;\n}\n\n/*\n * Empty each element in the collection.\n *\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').empty();\n */\n\nfunction empty(){\n    return each(this, function(element) {\n        element.innerHTML = '';\n    });\n}\n\n/**\n * Remove the collection from the DOM.\n *\n * @return {Array} Array containing the removed elements\n * @example\n *     $('.item').remove();\n */\n\nfunction remove() {\n    return each(this, function(element) {\n        if (element.parentNode) {\n            element.parentNode.removeChild(element);\n        }\n    });\n}\n\n/**\n * Replace each element in the collection with the provided new content, and return the array of elements that were replaced.\n *\n * @return {Array} Array containing the replaced elements\n */\n\nfunction replaceWith() {\n    return before.apply(this, arguments).remove();\n}\n\n/**\n * Get the `textContent` from the first, or set the `textContent` of each element in the collection.\n *\n * @param {String} [value]\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').text('New content');\n */\n\nfunction text(value){\n\n    if(value == null) {\n        return this[0].textContent;\n    }\n\n    each(this, function(element) {\n        element.textContent = '' + value;\n    });\n\n    return this;\n}\n\n/**\n * Get the `value` from the first, or set the `value` of each element in the collection.\n *\n * @param {String} [value]\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('input.firstName').value('New value');\n */\n\nfunction val(value){\n\n    if(value == null) {\n        return this[0].value;\n    }\n\n    each(this, function(element){\n        element.value = value;\n    });\n\n    return this;\n}\n\n/*\n * Export interface\n */\n\nexport { appendTo, empty, remove, replaceWith, text, val };\n","/**\n * @module Events\n */\n\nimport { each } from './util';\nimport { closest } from './selector';\n\n/**\n * Shorthand for `addEventListener`. Supports event delegation if a filter (`selector`) is provided.\n *\n * @param {String} eventNames List of space-separated event types to be added to the element(s)\n * @param {String} [selector] Selector to filter descendants that delegate the event to this element.\n * @param {Function} handler Event handler\n * @param {Boolean} useCapture=false\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').on('click', callback);\n *     $('.container').on('click focus', '.item', handler);\n */\n\nfunction on(eventNames, selector, handler, useCapture) {\n\n    if (typeof selector === 'function') {\n        handler = selector;\n        selector = null;\n    }\n\n    var parts,\n        namespace,\n        eventListener;\n\n    eventNames.split(' ').forEach(function(eventName) {\n\n        parts = eventName.split('.');\n        eventName = parts[0] || null;\n        namespace = parts[1] || null;\n\n        eventListener = proxyHandler(handler);\n\n        each(this, function(element) {\n\n            if (selector) {\n                eventListener = delegateHandler.bind(element, selector, eventListener);\n            }\n\n            element.addEventListener(eventName, eventListener, useCapture || false);\n\n            getHandlers(element).push({\n                eventName: eventName,\n                handler: handler,\n                eventListener: eventListener,\n                selector: selector,\n                namespace: namespace\n            });\n        });\n\n    }, this);\n\n    return this;\n}\n\n/**\n * Shorthand for `removeEventListener`. Delegates to `undelegate` if that signature is used.\n *\n * @param {String} eventNames List of space-separated event types to be removed from the element(s)\n * @param {String} [selector] Selector to filter descendants that undelegate the event to this element.\n * @param {Function} handler Event handler\n * @param {Boolean} useCapture=false\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').off('click', callback);\n *     $('#my-element').off('myEvent myOtherEvent');\n *     $('.item').off();\n */\n\nfunction off(eventNames = '', selector, handler, useCapture) {\n\n    if (typeof selector === 'function') {\n        handler = selector;\n        selector = null;\n    }\n\n    var parts,\n        namespace,\n        handlers;\n\n    eventNames.split(' ').forEach(function(eventName) {\n\n        parts = eventName.split('.');\n        eventName = parts[0] || null;\n        namespace = parts[1] || null;\n\n        each(this, function(element) {\n\n            handlers = getHandlers(element);\n\n            each(handlers.filter(function(item) {\n                return (\n                    (!eventName || item.eventName === eventName) &&\n                    (!namespace || item.namespace === namespace) &&\n                    (!handler || item.handler === handler) &&\n                    (!selector || item.selector === selector));\n            }), function(item) {\n                element.removeEventListener(item.eventName, item.eventListener, useCapture || false);\n                handlers.splice(handlers.indexOf(item), 1);\n            });\n\n            if (!eventName && !namespace && !selector && !handler) {\n                clearHandlers(element);\n            } else if (handlers.length === 0) {\n                clearHandlers(element);\n            }\n\n        });\n\n    }, this);\n\n    return this;\n}\n\nfunction delegate(selector, eventName, handler) {\n    return on.call(this, eventName, selector, handler);\n}\n\nfunction undelegate(selector, eventName, handler) {\n    return off.call(this, eventName, selector, handler);\n}\n\n/**\n * Get event handlers from an element\n *\n * @private\n * @param {Node} element\n * @return {Array}\n */\n\nvar eventKeyProp = '__domtastic_event__';\nvar id = 1;\nvar handlers = {};\nvar unusedKeys = [];\n\nfunction getHandlers(element) {\n    if (!element[eventKeyProp]) {\n        element[eventKeyProp] = unusedKeys.length === 0 ? ++id : unusedKeys.pop();\n    }\n    var key = element[eventKeyProp];\n    return handlers[key] || (handlers[key] = []);\n}\n\n/**\n * Clear event handlers for an element\n *\n * @private\n * @param {Node} element\n */\n\nfunction clearHandlers(element) {\n    var key = element[eventKeyProp];\n    if (handlers[key]) {\n        handlers[key] = null;\n        element[key] = null;\n        unusedKeys.push(key);\n    }\n}\n\n/**\n * Function to create a handler that augments the event object with some extra methods,\n * and executes the callback with the event and the event data (i.e. `event.detail`).\n *\n * @private\n * @param handler Callback to execute as `handler(event, data)`\n * @return {Function}\n */\n\nfunction proxyHandler(handler) {\n    return function(event) {\n        handler.call(this, augmentEvent(event), event.detail);\n    };\n}\n\n/**\n * Attempt to augment events and implement something closer to DOM Level 3 Events.\n *\n * @private\n * @param {Object} event\n * @return {Function}\n */\n\nvar augmentEvent = (function() {\n\n    var methodName,\n        eventMethods = {\n            preventDefault: 'isDefaultPrevented',\n            stopImmediatePropagation: 'isImmediatePropagationStopped',\n            stopPropagation: 'isPropagationStopped'\n        },\n        noop = () => {},\n        returnTrue = () => true,\n        returnFalse = () => false;\n\n    return function(event) {\n        if (!event.isDefaultPrevented || event.stopImmediatePropagation || event.stopPropagation) {\n            for (methodName in eventMethods) {\n                (function(methodName, testMethodName, originalMethod) {\n                    event[methodName] = function() {\n                        this[testMethodName] = returnTrue;\n                        return originalMethod.apply(this, arguments);\n                    };\n                    event[testMethodName] = returnFalse;\n                }(methodName, eventMethods[methodName], event[methodName] || noop));\n            }\n            if (event._preventDefault) {\n                event.preventDefault();\n            }\n        }\n        return event;\n    }\n\n})();\n\n/**\n * Function to test whether delegated events match the provided `selector` (filter),\n * if the event propagation was stopped, and then actually call the provided event handler.\n * Use `this` instead of `event.currentTarget` on the event object.\n *\n * @private\n * @param {String} selector Selector to filter descendants that undelegate the event to this element.\n * @param {Function} handler Event handler\n * @param {Event} event\n */\n\nfunction delegateHandler(selector, handler, event) {\n    var eventTarget = event._target || event.target,\n        currentTarget = closest.call([eventTarget], selector, this)[0];\n    if (currentTarget && currentTarget !== this) {\n        if (currentTarget === eventTarget || !(event.isPropagationStopped && event.isPropagationStopped())) {\n            handler.call(currentTarget, event);\n        }\n    }\n}\n\nvar bind = on,\n    unbind = off;\n\n/*\n * Export interface\n */\n\nexport { on, off, delegate, undelegate, bind, unbind };\n","/**\n * @module HTML\n */\n\nimport { each } from './util';\n\n/*\n * Get the HTML contents of the first element, or set the HTML contents for each element in the collection.\n *\n * @param {String} [fragment] HTML fragment to set for the element. If this argument is omitted, the HTML contents are returned.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').html();\n *     $('.item').html('<span>more</span>');\n */\n\nfunction html(fragment) {\n\n    if (typeof fragment !== 'string') {\n        var element = this.nodeType ? this : this[0];\n        return element ? element.innerHTML : undefined;\n    }\n\n    each(this, function(element) {\n        element.innerHTML = fragment;\n    });\n\n    return this;\n\n}\n\n/*\n * Export interface\n */\n\nexport { html };\n","/**\n * @module API\n */\n\nimport { extend, extendAll } from './util';\n\nvar api = {},\n    apiNodeList = {},\n    $ = {};\n\n// Import modules to build up the API\n\nimport * as array from './array';\nimport * as attr from './attr';\nimport * as class_ from './class';\nimport * as contains from './contains';\nimport * as css from './css';\nimport * as data from './data';\nimport * as dom from './dom';\nimport * as dom_extra from './dom_extra';\nimport * as event from './event';\nimport * as html from './html';\nimport * as mode from './mode';\nimport * as noconflict from './noconflict';\nimport * as ready from './ready';\nimport * as selector from './selector';\nimport * as selector_extra from './selector_extra';\nimport * as trigger from './trigger';\nimport * as type from './type';\n\nif (typeof selector !== 'undefined') {\n    $ = selector.$;\n    $.matches = selector.matches;\n    api.find = selector.find;\n    api.closest = selector.closest;\n}\n\nextendAll($, contains, mode, noconflict, type);\nextendAll(api, array, attr, class_, css, data, dom, dom_extra, event, html, ready, selector_extra, trigger);\nextendAll(apiNodeList, array);\n\n// Version\n\n$.version = '__VERSION__';\n\n// Util\n\n$.extend = extend;\n\n// Internal properties to switch between default and native mode\n\n$.fn = api;\n$.fnList = apiNodeList;\n\n// Export interface\n\nexport default $;\n","/*\n * # Opt-in to Native Mode\n *\n * The default, non-intrusive mode is similar to how jQuery operates: working with static, array-like `$` objects:\n *\n *     $('.items').append('<span>foo</span>);\n *     $(document.body).on('click', '.tab', handler);\n *\n * However, you can opt-in to work with live NodeList objects.\n * In this \"native\" mode, the `Node` and `NodeList` prototypes are augmented (in a safe and reversible manner) to fill up the chainable API,\n * to enable working with `Node` and `NodeList` objects directly:\n *\n *     var collection = document.querySelectorAll('.items');\n *     collection.append('<span>foo</span>);\n *     collection.addClass('bar');\n *     collection.forEach(iteratorFn);\n *     collection.find('.more');\n *\n *     document.body.on('click', '.tab', handler)\n *\n * Note that in native mode, `$(selector)` can stil be used. It returns a NodeList.\n *\n * Build the lib using gulp with `mode` not excluded.\n * Use `$.native()` to activate this behavior. The API is the same in both modes.\n */\n\nimport { global } from './util';\n\nvar isNative = false;\n\nfunction native(goNative = true) {\n    var wasNative = isNative;\n    isNative = goNative;\n    if (global.$) {\n        global.$.isNative = isNative;\n    }\n    if (!wasNative && isNative) {\n        augmentNativePrototypes(this.fn, this.fnList);\n    }\n    if (wasNative && !isNative) {\n        unaugmentNativePrototypes(this.fn, this.fnList);\n    }\n    return isNative;\n}\n\nvar NodeProto = typeof Node !== 'undefined' && Node.prototype,\n    NodeListProto = typeof NodeList !== 'undefined' && NodeList.prototype;\n\n/*\n * Add a property (i.e. method) to an object in a safe and reversible manner.\n * Only add the method if object not already had it (non-inherited).\n *\n * @private\n */\n\nfunction augment(obj, key, value) {\n    if (!obj.hasOwnProperty(key)) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            configurable: true,\n            enumerable: false\n        });\n    }\n}\n\n/*\n * Remove property from object (only inherited properties will be removed).\n *\n * @private\n */\n\nvar unaugment = (obj, key) => { delete obj[key] };\n\n/*\n * Augment native `Node` and `NodeList` objects in native mode.\n *\n * @private\n */\n\nfunction augmentNativePrototypes(methodsNode, methodsNodeList) {\n\n    var key;\n\n    for (key in methodsNode) {\n        augment(NodeProto, key, methodsNode[key]);\n        augment(NodeListProto, key, methodsNode[key]);\n    }\n\n    for (key in methodsNodeList) {\n        augment(NodeListProto, key, methodsNodeList[key]);\n    }\n}\n\n/*\n * Unaugment native `Node` and `NodeList` objects to switch back to default mode.\n * Mainly used for tests.\n *\n * @private\n */\n\nfunction unaugmentNativePrototypes(methodsNode, methodsNodeList) {\n\n    var key;\n\n    for (key in methodsNode) {\n        unaugment(NodeProto, key);\n        unaugment(NodeListProto, key);\n    }\n\n    for (key in methodsNodeList) {\n        unaugment(NodeListProto, key);\n    }\n}\n\n// Export interface\n\nexport { isNative, native };\n","/**\n * @module noConflict\n */\n\nimport { global } from './util';\n\n/*\n * Save the previous value of the global `$` variable, so that it can be restored later on.\n * @private\n */\n\nvar previousLib = global.$;\n\n/**\n * In case another library sets the global `$` variable before DOMtastic does,\n * this method can be used to return the global `$` to that other library.\n *\n * @return {Object} Reference to DOMtastic.\n * @example\n *     var $E = $.noConflict();\n */\n\nfunction noConflict() {\n    global.$ = previousLib;\n    return this;\n}\n\n/*\n * Export interface\n */\n\nexport { noConflict };\n","/**\n * @module Ready\n */\n\n/**\n * Execute callback when `DOMContentLoaded` fires for `document`, or immediately if called afterwards.\n *\n * @param handler Callback to execute when initial DOM content is loaded.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $(document).ready(callback);\n */\n\nfunction ready(handler) {\n    if (/complete|loaded|interactive/.test(document.readyState) && document.body) {\n        handler();\n    } else {\n        document.addEventListener('DOMContentLoaded', handler, false)\n    }\n    return this;\n}\n\n/*\n * Export interface\n */\n\nexport { ready };\n","/**\n * @module Selector\n */\n\nimport { global, makeIterable } from './util';\n\nvar isPrototypeSet = false,\n    reFragment = /^\\s*<(\\w+|!)[^>]*>/,\n    reSingleTag = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\n    reSimpleSelector = /^[\\.#]?[\\w-]*$/;\n\n/*\n * Versatile wrapper for `querySelectorAll`.\n *\n * @param {String|Node|NodeList|Array} selector Query selector, `Node`, `NodeList`, array of elements, or HTML fragment string.\n * @param {String|Node|NodeList} context=document The context for the selector to query elements.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     var $items = $(.items');\n * @example\n *     var $element = $(domElement);\n * @example\n *     var $list = $(nodeList, document.body);\n * @example\n *     var $element = $('<p>evergreen</p>');\n */\n\nfunction $(selector, context = document) {\n\n    var collection;\n\n    if (!selector) {\n\n        collection = document.querySelectorAll(null);\n\n    } else if (selector instanceof Wrapper) {\n\n        return selector;\n\n    } else if (typeof selector !== 'string') {\n\n        collection = makeIterable(selector);\n\n    } else if (reFragment.test(selector)) {\n\n        collection = createFragment(selector);\n\n    } else {\n\n        context = typeof context === 'string' ? document.querySelector(context) : context.length ? context[0] : context;\n\n        collection = querySelector(selector, context);\n\n    }\n\n    return $.isNative ? collection : wrap(collection);\n\n}\n\n/*\n * Chaining for the `$` wrapper (aliasing `find` for `$`).\n *\n * @param {String|Node|NodeList|Array} selector Query selector, `Node`, `NodeList`, array of elements, or HTML fragment string.\n * @return {Object} The wrapped collection\n * @example\n *     $('.selector').find('.deep').$('.deepest');\n */\n\nfunction find(selector) {\n    return $(selector, this);\n}\n\n/**\n * Return the closest element matching the selector (starting by itself).\n *\n * @param {String} selector Filter\n * @param {Object} [context] If provided, matching elements must be a descendant of this element\n * @return {Object} New wrapped collection (containing zero or one element)\n * @chainable\n * @example\n *     $('.selector').closest('.container');\n */\n\nfunction closest(selector, context) {\n    var node = this[0];\n    for (; node.nodeType !== node.DOCUMENT_NODE && node !== context; node = node.parentNode) {\n        if (matches(node, selector)) {\n            return $(node);\n        }\n    }\n    return $();\n}\n\n/*\n * Returns `true` if the element would be selected by the specified selector string; otherwise, returns `false`.\n *\n * @param {Node} element Element to test\n * @param {String} selector Selector to match against element\n * @return {Boolean}\n *\n * @example\n *     $.matches(element, '.match');\n */\n\nvar matches = (function() {\n    var context = typeof Element !== 'undefined' ? Element.prototype : global,\n        _matches = context.matches || context.matchesSelector || context.mozMatchesSelector || context.webkitMatchesSelector || context.msMatchesSelector || context.oMatchesSelector;\n    return function(element, selector) {\n        return _matches.call(element, selector);\n    };\n})();\n\n/*\n * Use the faster `getElementById`, `getElementsByClassName` or `getElementsByTagName` over `querySelectorAll` if possible.\n *\n * @private\n * @param {String} selector Query selector.\n * @param {Node} context The context for the selector to query elements.\n * @return {Object} NodeList, HTMLCollection, or Array of matching elements (depending on method used).\n */\n\nfunction querySelector(selector, context) {\n\n    var isSimpleSelector = reSimpleSelector.test(selector);\n\n    if (isSimpleSelector && !$.isNative) {\n        if (selector[0] === '#') {\n            var element = (context.getElementById ? context : document).getElementById(selector.slice(1));\n            return element ? [element] : [];\n        }\n        if (selector[0] === '.') {\n            return context.getElementsByClassName(selector.slice(1));\n        }\n        return context.getElementsByTagName(selector);\n    }\n\n    return context.querySelectorAll(selector);\n\n}\n\n/*\n * Create DOM fragment from an HTML string\n *\n * @private\n * @param {String} html String representing HTML.\n * @return {NodeList}\n */\n\nfunction createFragment(html) {\n\n    if (reSingleTag.test(html)) {\n        return [document.createElement(RegExp.$1)];\n    }\n\n    var elements = [],\n        container = document.createElement('div'),\n        children = container.childNodes;\n\n    container.innerHTML = html;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n        elements.push(children[i]);\n    }\n\n    return elements;\n}\n\n/*\n * Calling `$(selector)` returns a wrapped collection of elements.\n *\n * @private\n * @param {NodeList|Array} collection Element(s) to wrap.\n * @return (Object) The wrapped collection\n */\n\nfunction wrap(collection) {\n\n    if (!isPrototypeSet) {\n        Wrapper.prototype = $.fn;\n        Wrapper.prototype.constructor = Wrapper;\n        isPrototypeSet = true;\n    }\n\n    return new Wrapper(collection);\n}\n\n/*\n * Constructor for the Object.prototype strategy\n *\n * @constructor\n * @private\n * @param {NodeList|Array} collection Element(s) to wrap.\n */\n\nfunction Wrapper(collection) {\n    var i = 0, length = collection.length;\n    for (; i < length;) {\n        this[i] = collection[i++];\n    }\n    this.length = length;\n}\n\n/*\n * Export interface\n */\n\nexport { $, find, closest, matches };\n","/**\n * @module Selector (extra)\n */\n\nimport { each, toArray } from './util';\nimport { $, matches } from './selector';\n\n/**\n * Return children of each element in the collection, optionally filtered by a selector.\n *\n * @param {String} [selector] Filter\n * @return {Object} New wrapped collection\n * @chainable\n * @example\n *     $('.selector').children();\n *     $('.selector').children('.filter');\n */\n\nfunction children(selector) {\n    var nodes = [];\n    each(this, function(element) {\n        if(element.children) {\n            each(element.children, function(child) {\n                if (!selector || (selector && matches(child, selector))) {\n                    nodes.push(child);\n                }\n            });\n        }\n    });\n    return $(nodes);\n}\n\n/**\n * Return child nodes of each element in the collection, including text and comment nodes.\n *\n * @return {Object} New wrapped collection\n * @example\n *     $('.selector').contents();\n */\n\nfunction contents() {\n    var nodes = [];\n    each(this, function(element) {\n        nodes.push.apply(nodes, toArray(element.childNodes));\n    });\n    return $(nodes);\n}\n\n/**\n * Return a collection containing only the one at the specified index.\n *\n * @param {Number} index\n * @return {Object} New wrapped collection\n * @chainable\n * @example\n *     $('.items').eq(1)\n *     ➤ The second item; result is the same as doing $($('.items')[1]);\n */\n\nfunction eq(index) {\n    return slice.call(this, index, index + 1);\n}\n\n/**\n * Return the DOM element at the specified index.\n *\n * @param {Number} index\n * @return {Node} Element at the specified index\n * @example\n *     $('.items').get(1)\n *     ➤ The second element; result is the same as doing $('.items')[1];\n */\n\nfunction get(index) {\n    return this[index];\n}\n\n/**\n * Return the parent elements of each element in the collection, optionally filtered by a selector.\n *\n * @param {String} [selector] Filter\n * @return {Object} New wrapped collection\n * @chainable\n * @example\n *     $('.selector').parent();\n *     $('.selector').parent('.filter');\n */\n\nfunction parent(selector) {\n    var nodes = [];\n    each(this, function(element) {\n        if (!selector || (selector && matches(element.parentNode, selector))) {\n            nodes.push(element.parentNode);\n        }\n    });\n    return $(nodes);\n}\n\n/**\n * Create a new, sliced collection.\n *\n * @param {Number} start\n * @param {Number} end\n * @return {Object} New wrapped collection\n * @example\n *     $('.items').slice(1, 3)\n *     ➤ New wrapped collection containing the second, third, and fourth element.\n */\n\nfunction slice(start, end) {\n    return $([].slice.apply(this, arguments));\n}\n\n/*\n * Export interface\n */\n\nexport { children, contents, eq, get, parent, slice };\n","/**\n * @module trigger\n */\n\nimport { global, each } from './util';\nimport { closest } from './selector';\n\nvar reMouseEvent = /^(?:mouse|pointer|contextmenu)|click/,\n    reKeyEvent = /^key/;\n\n/**\n * Trigger event at element(s)\n *\n * @param {String} type Type of the event\n * @param {Object} data Data to be sent with the event (`params.detail` will be set to this).\n * @param {Object} [params] Event parameters (optional)\n * @param {Boolean} params.bubbles=true Does the event bubble up through the DOM or not.\n * @param {Boolean} params.cancelable=true Is the event cancelable or not.\n * @param {Mixed} params.detail=undefined Additional information about the event.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').trigger('anyEventType');\n */\n\nfunction trigger(type, data, params = {}) {\n\n    params.bubbles = typeof params.bubbles === 'boolean' ? params.bubbles : true;\n    params.cancelable = typeof params.cancelable === 'boolean' ? params.cancelable : true;\n    params.preventDefault = typeof params.preventDefault === 'boolean' ? params.preventDefault : false;\n    params.detail = data;\n\n    var EventConstructor = getEventConstructor(type),\n        event = new EventConstructor(type, params);\n\n    event._preventDefault = params.preventDefault;\n\n    each(this, function(element) {\n        if (!params.bubbles || isEventBubblingInDetachedTree || isAttachedToDocument(element)) {\n            dispatchEvent(element, event);\n        } else {\n            triggerForPath(element, type, params);\n        }\n    });\n    return this;\n}\n\nfunction getEventConstructor(type) {\n    return !supportsOtherEventConstructors ? CustomEvent : reMouseEvent.test(type) ? MouseEvent : reKeyEvent.test(type) ? KeyboardEvent : CustomEvent;\n}\n\n/**\n * Trigger event at first element in the collection. Similar to `trigger()`, except:\n *\n * - Event does not bubble\n * - Default event behavior is prevented\n * - Only triggers handler for first matching element\n *\n * @param {String} type Type of the event\n * @param {Object} data Data to be sent with the event\n * @example\n *     $('form').triggerHandler('submit');\n */\n\nfunction triggerHandler(type, data) {\n    if (this[0]) {\n        trigger.call(this[0], type, data, {bubbles: false, preventDefault: true});\n    }\n}\n\n/**\n * Check whether the element is attached to (or detached from) the document\n *\n * @private\n * @param {Node} element Element to test\n * @return {Boolean}\n */\n\nfunction isAttachedToDocument(element) {\n    if (element === window || element === document) {\n        return true;\n    }\n    return $.contains(element.ownerDocument.documentElement, element);\n}\n\n/**\n * Dispatch the event at the element and its ancestors.\n * Required to support delegated events in browsers that don't bubble events in detached DOM trees.\n *\n * @private\n * @param {Node} element First element to dispatch the event at\n * @param {String} type Type of the event\n * @param {Object} [params] Event parameters (optional)\n * @param {Boolean} params.bubbles=true Does the event bubble up through the DOM or not.\n * Will be set to false (but shouldn't matter since events don't bubble anyway).\n * @param {Boolean} params.cancelable=true Is the event cancelable or not.\n * @param {Mixed} params.detail=undefined Additional information about the event.\n */\n\nfunction triggerForPath(element, type, params = {}) {\n    params.bubbles = false;\n    var event = new CustomEvent(type, params);\n    event._target = element;\n    do {\n        dispatchEvent(element, event);\n    } while (element = element.parentNode);\n}\n\n/**\n * Dispatch event to element, but call direct event methods instead if available\n * (e.g. \"blur()\", \"submit()\") and if the event is non-cancelable.\n *\n * @private\n * @param {Node} element Element to dispatch the event at\n * @param {Object} event Event to dispatch\n */\n\nvar directEventMethods = ['blur', 'focus', 'select', 'submit'];\n\nfunction dispatchEvent(element, event) {\n    if(directEventMethods.indexOf(event.type) !== -1 && typeof element[event.type] === 'function' && !event._preventDefault && !event.cancelable) {\n        element[event.type]();\n    } else {\n        element.dispatchEvent(event);\n    }\n}\n\n/**\n * Polyfill for CustomEvent, borrowed from [MDN](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent#Polyfill).\n * Needed to support IE (9, 10, 11) & PhantomJS\n */\n\n(function() {\n    function CustomEvent(event, params = { bubbles: false, cancelable: false, detail: undefined }) {\n        var customEvent = document.createEvent('CustomEvent');\n        customEvent.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n        return customEvent;\n    }\n\n    CustomEvent.prototype = global.CustomEvent && global.CustomEvent.prototype;\n    global.CustomEvent = CustomEvent;\n\n})();\n\n/*\n * Are events bubbling in detached DOM trees?\n * @private\n */\n\nvar isEventBubblingInDetachedTree = (function() {\n    var isBubbling = false,\n        doc = global.document;\n    if (doc) {\n        var parent = doc.createElement('div'),\n            child = parent.cloneNode();\n        parent.appendChild(child);\n        parent.addEventListener('e', function() {\n            isBubbling = true;\n        });\n        child.dispatchEvent(new CustomEvent('e', { bubbles: true }));\n    }\n    return isBubbling;\n})();\n\nvar supportsOtherEventConstructors = (function() {\n    try {\n        new window.MouseEvent('click');\n    } catch (e) {\n        return false;\n    }\n    return true;\n})();\n\n/*\n * Export interface\n */\n\nexport { trigger, triggerHandler };\n","/**\n * @module Type\n */\n\n/*\n * Determine if the argument passed is a Javascript function object.\n *\n * @param {Object} [obj] Object to test whether or not it is a function.\n * @return {boolean} \n * @example\n *     $.isFunction(function(){});\n *     ➤ true\n * @example\n *     $.isFunction({});\n *     ➤ false\n */\n\nfunction isFunction(obj) {\n    return (typeof obj === 'function');\n}\n\n/*\n * Determine whether the argument is an array.\n *\n * @param {Object} [obj] Object to test whether or not it is an array.\n * @return {boolean} \n * @example\n *     $.isArray([]);\n *     ➤ true\n * @example\n *     $.isArray({});\n *     ➤ false\n */\n\nvar isArray = Array.isArray;\n\n/*\n * Export interface\n */\n\nexport { isFunction, isArray };\n","/*\n * @module Util\n */\n\n/*\n * Reference to the global scope\n * @private\n */\n\nvar global = new Function(\"return this\")();\n\n/**\n * Convert `NodeList` to `Array`.\n *\n * @param {NodeList|Array} collection\n * @return {Array}\n * @private\n */\n\nfunction toArray(collection) {\n    var length = collection.length,\n        result = Array(length);\n    for (var i = 0; i < length; i++) {\n        result[i] = collection[i];\n    }\n    return result;\n}\n\n/**\n * Return something that can be iterated over (e.g. using `forEach`).\n * Arrays and NodeLists are returned as-is, but a Node will be wrapped in a `[]`.\n *\n * @param {Node|NodeList|Array} element\n * @return {Array|NodeList}\n * @private\n */\n\nvar makeIterable = (element) => element.nodeType || element === window ? [element] : element;\n\n/**\n * Faster alternative to [].forEach method\n *\n * @param {Node|NodeList|Array} collection\n * @param {Function} callback\n * @return {Node|NodeList|Array}\n * @private\n */\n\nfunction each(collection, callback, thisArg) {\n    var length = collection.length;\n    if (length !== undefined && collection.nodeType === undefined) {\n        for (var i = 0; i < length; i++){\n            callback.call(thisArg, collection[i], i, collection);\n        }\n    } else {\n        callback.call(thisArg, collection, 0, collection);\n    }\n    return collection;\n}\n\n/**\n * Assign enumerable properties from source object(s) to target object\n *\n * @method extend\n * @param {Object} target Object to extend\n * @param {Object} [source] Object to extend from\n * @return {Object} Extended object\n * @example\n *     $.extend({a: 1}, {b: 2});\n *     ➤ {a: 1, b: 2}\n * @example\n *     $.extend({a: 1}, {b: 2}, {a: 3});\n *     ➤ {a: 3, b: 2}\n */\n\nfunction extend(target, ...sources) {\n    sources.forEach(function(src) {\n        if (src) {\n            for (var prop in src) {\n                target[prop] = src[prop];\n            }\n        }\n    });\n    return target;\n}\n\n/**\n * Assign all properties (including non-enumerable) from source object(s) to target object\n *\n * @method extendMore\n * @param {Object} target Object to extend\n * @param {Object} [source] Object to extend from\n * @return {Object} Extended object\n */\n\nfunction extendAll(target, ...sources) {\n    sources.forEach(function(src) {\n        Object.getOwnPropertyNames(src).forEach(function(prop) {\n            target[prop] = src[prop];\n        });\n    });\n    return target;\n}\n\n/*\n * Export interface\n */\n\nexport { global, toArray, makeIterable, each, extend, extendAll };\n"],"sourceRoot":"/source/"}