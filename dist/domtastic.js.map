{"version":3,"sources":["../node_modules/browserify/node_modules/browser-pack/_prelude.js","../src/array.js","../src/attr.js","../src/class.js","../src/contains.js","../src/css.js","../src/data.js","../src/dom.js","../src/dom_extra.js","../src/event.js","../src/html.js","../src/noconflict.js","../src/ready.js","../src/selector.js","../src/selector_extra.js","../src/trigger.js","../src/type.js","../src/util.js","../src/index.js"],"names":[],"mappings":"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","file":"domtastic.js","sourceRoot":"","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * @module Array\n */\n\nimport { each as _each, toArray } from './util';\nimport { $, matches } from './selector';\n\nvar ArrayProto = Array.prototype;\n\n/**\n * Checks if the given callback returns a true(-ish) value for each element in the collection.\n *\n * @param {Function} callback Function to execute for each element, invoked with `element` as argument.\n * @param {Object} [thisArg] Value to use as `this` when executing `callback`.\n * @return {Boolean} Whether each element passed the callback check.\n * @example\n *     $('.items').every(function(element) {\n *         return element.hasAttribute('active')\n *     });\n *     // true/false\n */\n\nvar every = ArrayProto.every;\n\n/**\n * Filter the collection by selector or function, and return a new collection with the result.\n *\n * @param {String|Function} selector Selector or function to filter the collection.\n * @param {Object} [thisArg] Value to use as `this` when executing `callback`.\n * @return {Object} A new wrapped collection\n * @chainable\n * @example\n *     $('.items').filter('.active');\n * @example\n *     $('.items').filter(function(element) {\n *         return element.hasAttribute('active')\n *     });\n */\n\nfunction filter(selector, thisArg) {\n    var callback = typeof selector === 'function' ? selector : function(element) {\n        return matches(element, selector);\n    };\n    return $(ArrayProto.filter.call(this, callback, thisArg));\n}\n\n/**\n * Execute a function for each element in the collection.\n *\n * @param {Function} callback Function to execute for each element, invoked with `element` as argument.\n * @param {Object} [thisArg] Value to use as `this` when executing `callback`.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').forEach(function(element) {\n *         element.style.color = 'evergreen';\n *     );\n */\n\nfunction forEach(callback, thisArg) {\n    return _each(this, callback, thisArg);\n}\n\nvar each = forEach;\n\n/**\n * Returns the index of an element in the collection.\n *\n * @param {Node} element\n * @return {Number} The zero-based index, -1 if not found.\n * @example\n *     $('.items').indexOf(element);\n *     // 2\n */\n\nvar indexOf = ArrayProto.indexOf;\n\n/**\n * Create a new collection by executing the callback for each element in the collection.\n *\n * @param {Function} callback Function to execute for each element, invoked with `element` as argument.\n * @param {Object} [thisArg] Value to use as `this` when executing `callback`.\n * @return {Array} Collection with the return value of the executed callback for each element.\n * @example\n *     $('.items').map(function(element) {\n *         return element.getAttribute('name')\n *     });\n *     // ['ever', 'green']\n */\n\nvar map = ArrayProto.map;\n\n/**\n * Removes the last element from the collection, and returns that element.\n *\n * @return {Object} The last element from the collection.\n * @example\n *     var lastElement = $('.items').pop();\n */\n\nvar pop = ArrayProto.pop;\n\n/**\n * Adds one or more elements to the end of the collection, and returns the new length of the collection.\n *\n * @param {Object} element Element(s) to add to the collection\n * @return {Number} The new length of the collection\n * @example\n *     $('.items').push(element);\n */\n\nvar push = ArrayProto.push;\n\n/**\n * Apply a function against each element in the collection, and this accumulator function has to reduce it\n * to a single value.\n *\n * @param {Function} callback Function to execute on each value in the array, taking four arguments (see example).\n * @param {Mixed} initialValue Object to use as the first argument to the first call of the callback.\n * @example\n *     $('.items').reduce(function(previousValue, element, index, collection) {\n *         return previousValue + element.clientHeight;\n *     }, 0);\n *     // [total height of elements]\n */\n\nvar reduce = ArrayProto.reduce;\n\n/**\n * Apply a function against each element in the collection (from right-to-left), and this accumulator function has\n * to reduce it to a single value.\n *\n * @param {Function} callback Function to execute on each value in the array, taking four arguments (see example).\n * @param {Mixed} initialValue Object to use as the first argument to the first call of the callback.\n * @example\n *     $('.items').reduceRight(function(previousValue, element, index, collection) {\n *         return previousValue + element.textContent;\n *     }, '')\n *     // [reversed text of elements]\n */\n\nvar reduceRight = ArrayProto.reduceRight;\n\n/**\n * Reverses an array in place. The first array element becomes the last and the last becomes the first.\n *\n * @return {Object} The wrapped collection, reversed\n * @chainable\n * @example\n *     $('.items').reverse();\n */\n\nfunction reverse() {\n    return $(toArray(this).reverse());\n}\n\n/**\n * Removes the first element from the collection, and returns that element.\n *\n * @return {Object} The first element from the collection.\n * @example\n *     var firstElement = $('.items').shift();\n */\n\nvar shift = ArrayProto.shift;\n\n/**\n * Checks if the given callback returns a true(-ish) value for any of the elements in the collection.\n *\n * @param {Function} callback Function to execute for each element, invoked with `element` as argument.\n * @return {Boolean} Whether any element passed the callback check.\n * @example\n *     $('.items').some(function(element) {\n *         return element.hasAttribute('active')\n *     });\n *     // true/false\n */\n\nvar some = ArrayProto.some;\n\n/**\n * Adds one or more elements to the beginning of the collection, and returns the new length of the collection.\n *\n * @param {Object} element Element(s) to add to the collection\n * @return {Number} The new length of the collection\n * @example\n *     $('.items').unshift(element);\n */\n\nvar unshift = ArrayProto.unshift;\n\n/*\n * Export interface\n */\n\nexport { each, every, filter, forEach, indexOf, map, pop, push, reduce, reduceRight, reverse, shift, some, unshift };\n","/**\n * @module Attr\n */\n\nimport { each } from './util';\n\n/**\n * Get the value of an attribute for the first element, or set one or more attributes for each element in the collection.\n *\n * @param {String|Object} key The name of the attribute to get or set. Or an object containing key-value pairs to set as attributes.\n * @param {String} [value] The value of the attribute to set.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').attr('attrName'); // get\n *     $('.item').attr('attrName', 'attrValue'); // set\n *     $('.item').attr({'attr1', 'value1'}, {'attr2', 'value2}); // set multiple\n */\n\nfunction attr(key, value) {\n\n    if (typeof key === 'string' && typeof value === 'undefined') {\n        var element = this.nodeType ? this : this[0];\n        return element ? element.getAttribute(key) : undefined;\n    }\n\n    each(this, function(element) {\n        if (typeof key === 'object') {\n            for (var attr in key) {\n                element.setAttribute(attr, key[attr]);\n            }\n        } else {\n            element.setAttribute(key, value);\n        }\n    });\n\n    return this;\n}\n\n/**\n * Remove attribute from each element in the collection.\n *\n * @param {String} key Attribute name\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').removeAttr('attrName');\n */\n\nfunction removeAttr(key) {\n    each(this, function(element) {\n        element.removeAttribute(key);\n    });\n    return this;\n}\n\n/*\n * Export interface\n */\n\nexport { attr, removeAttr };\n","/**\n * @module Class\n */\n\nimport { each } from './util';\n\n/**\n * Add a class to the element(s)\n *\n * @param {String} value Space-separated class name(s) to add to the element(s).\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').addClass('bar');\n *     $('.item').addClass('bar foo');\n */\n\nfunction addClass(value) {\n    if(value && value.length) {\n        each(value.split(' '), _each.bind(this, 'add'));\n    }\n    return this;\n}\n\n/**\n * Remove a class from the element(s)\n *\n * @param {String} value Space-separated class name(s) to remove from the element(s).\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').removeClass('bar');\n *     $('.items').removeClass('bar foo');\n */\n\nfunction removeClass(value) {\n    if(value && value.length) {\n        each(value.split(' '), _each.bind(this, 'remove'));\n    }\n    return this;\n}\n\n/**\n * Toggle a class at the element(s)\n *\n * @param {String} value Space-separated class name(s) to toggle at the element(s).\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').toggleClass('bar');\n *     $('.item').toggleClass('bar foo');\n */\n\nfunction toggleClass(value) {\n    if(value && value.length) {\n        each(value.split(' '), _each.bind(this, 'toggle'));\n    }\n    return this;\n}\n\n/**\n * Check if the element(s) have a class.\n *\n * @param {String} value Check if the DOM element contains the class name. When applied to multiple elements,\n * returns `true` if _any_ of them contains the class name.\n * @return {Boolean} Whether the element's class attribute contains the class name.\n * @example\n *     $('.item').hasClass('bar');\n */\n\nfunction hasClass(value) {\n    return (this.nodeType ? [this] : this).some(function(element) {\n        return element.classList.contains(value);\n    });\n}\n\n/**\n * Specialized iteration, applying `fn` of the classList API to each element.\n *\n * @param {String} fnName\n * @param {String} className\n * @private\n */\n\nfunction _each(fnName, className) {\n    each(this, function(element) {\n        element.classList[fnName](className);\n    });\n}\n\n/*\n * Export interface\n */\n\nexport { addClass, removeClass, toggleClass, hasClass };\n","/**\n * @module contains\n */\n\n/**\n * Test whether an element contains another element in the DOM.\n *\n * @param {Element} container The element that may contain the other element.\n * @param {Element} element The element that may be a descendant of the other element.\n * @return {Boolean} Whether the `container` element contains the `element`.\n * @example\n *     $.contains(parentElement, childElement);\n *     // true/false\n */\n\nfunction contains(container, element) {\n    if(!container || !element || container === element) {\n        return false;\n    } else if (container.contains) {\n        return container.contains(element);\n    } else if (container.compareDocumentPosition) {\n        return !(container.compareDocumentPosition(element) & Node.DOCUMENT_POSITION_DISCONNECTED);\n    }\n    return false;\n}\n\n\n/*\n * Export interface\n */\n\nexport { contains };\n","/**\n * @module Attr\n */\n\nimport { each } from './util';\n\nfunction isNumeric(value) {\n    return !isNaN(parseFloat(value)) && isFinite(value);\n}\n\nfunction camelize(value) {\n    return value.replace(/-([\\da-z])/gi, function (matches, letter) { return letter.toUpperCase(); });\n}\n\nfunction dasherize(value) {\n    return value.replace(/([a-z\\d])([A-Z])/g, '$1-$2').toLowerCase();\n}\n\n/**\n * Get the value of a style property for the first element, or set one or more style properties for each element in the collection.\n *\n * @param {String|Object} key The name of the style property to get or set. Or an object containing key-value pairs to set as style properties.\n * @param {String} [value] The value of the style property to set.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').css('padding-left'); // get\n *     $('.item').css('color', '#f00'); // set\n *     $('.item').css({'border-width', '1px'}, {'display', 'inline-block}); // set multiple\n */\n\nfunction css(key, value) {\n\n    var styleProps, prop, val;\n\n    if(typeof key === 'string') {\n        key = camelize(key);\n\n        if (typeof value === 'undefined') {\n            var element = this.nodeType ? this : this[0];\n            if(element) {\n                val = element.style[key];\n                return isNumeric(val) ? parseFloat(val) : val;\n            }\n            return undefined;\n        }\n\n        styleProps = {};\n        styleProps[key] = value;\n    } else {\n        styleProps = key;\n        for (prop in styleProps) {\n            val = styleProps[prop];\n            delete styleProps[prop];\n            styleProps[camelize(prop)] = val;\n        }\n    }\n\n    each(this, function(element) {\n        for (prop in styleProps) {\n            if(styleProps[prop] || styleProps[prop] === 0) {\n                element.style[prop] = styleProps[prop];\n            } else {\n                element.style.removeProperty(dasherize(prop));\n            }\n        }\n    });\n\n    return this;\n}\n\n/*\n * Export interface\n */\n\nexport { css };\n","/**\n * @module Data\n */\n\nimport { each } from './util';\n\nvar dataKeyProp = '__domtastic_data__';\n\n/**\n * Get data from first element, or set data for each element in the collection.\n *\n * @param {String} key The key for the data to get or set.\n * @param {String} [value] The data to set.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').data('attrName'); // get\n *     $('.item').data('attrName', {any: 'data'}); // set\n */\n\nfunction data(key, value) {\n\n    if (typeof key === 'string' && typeof value === 'undefined') {\n        var element = this.nodeType ? this : this[0];\n        return element && element[dataKeyProp] ? element[dataKeyProp][key] : undefined;\n    }\n\n    each(this, function(element) {\n        element[dataKeyProp] = element[dataKeyProp] || {};\n        element[dataKeyProp][key] = value;\n    });\n\n    return this;\n\n}\n\n/**\n * Get property from first element, or set property on each element in the collection.\n *\n * @param {String} key The name of the property to get or set.\n * @param {String} [value] The value of the property to set.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').prop('attrName'); // get\n *     $('.item').prop('attrName', 'attrValue'); // set\n */\n\nfunction prop(key, value) {\n\n    if (typeof key === 'string' && typeof value === 'undefined') {\n        var element = this.nodeType ? this : this[0];\n        return element && element ? element[key] : undefined;\n    }\n\n    each(this, function(element) {\n        element[key] = value;\n    });\n\n    return this;\n\n}\n\n\n/*\n * Export interface\n */\n\nexport { data, prop }","/**\n * @module DOM\n */\n\nimport { toArray } from './util';\nimport { $ } from './selector';\n\n/**\n * Append element(s) to each element in the collection.\n *\n * @param {String|Node|NodeList|Object} element What to append to the element(s).\n * Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').append('<p>more</p>');\n */\n\nfunction append(element) {\n    if (this instanceof Node) {\n        if (typeof element === 'string') {\n            this.insertAdjacentHTML('beforeend', element);\n        } else {\n            if (element instanceof Node) {\n                this.appendChild(element);\n            } else {\n                var elements = element instanceof NodeList ? toArray(element) : element;\n                elements.forEach(this.appendChild.bind(this));\n            }\n        }\n    } else {\n        _each(this, append, element);\n    }\n    return this;\n}\n\n/**\n * Place element(s) at the beginning of each element in the collection.\n *\n * @param {String|Node|NodeList|Object} element What to place at the beginning of the element(s).\n * Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').prepend('<span>start</span>');\n */\n\nfunction prepend(element) {\n    if (this instanceof Node) {\n        if (typeof element === 'string') {\n            this.insertAdjacentHTML('afterbegin', element);\n        } else {\n            if (element instanceof Node) {\n                this.insertBefore(element, this.firstChild);\n            } else {\n                var elements = element instanceof NodeList ? toArray(element) : element;\n                elements.reverse().forEach(prepend.bind(this));\n            }\n        }\n    } else {\n        _each(this, prepend, element);\n    }\n    return this;\n}\n\n/**\n * Place element(s) before each element in the collection.\n *\n * @param {String|Node|NodeList|Object} element What to place as sibling(s) before to the element(s).\n * Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').before('<p>prefix</p>');\n */\n\nfunction before(element) {\n    if (this instanceof Node) {\n        if (typeof element === 'string') {\n            this.insertAdjacentHTML('beforebegin', element);\n        } else {\n            if (element instanceof Node) {\n                this.parentNode.insertBefore(element, this);\n            } else {\n                var elements = element instanceof NodeList ? toArray(element) : element;\n                elements.forEach(before.bind(this));\n            }\n        }\n    } else {\n        _each(this, before, element);\n    }\n    return this;\n}\n\n/**\n * Place element(s) after each element in the collection.\n *\n * @param {String|Node|NodeList|Object} element What to place as sibling(s) after to the element(s). Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').after('<span>suf</span><span>fix</span>');\n */\n\nfunction after(element) {\n    if (this instanceof Node) {\n        if (typeof element === 'string') {\n            this.insertAdjacentHTML('afterend', element);\n        } else {\n            if (element instanceof Node) {\n                this.parentNode.insertBefore(element, this.nextSibling);\n            } else {\n                var elements = element instanceof NodeList ? toArray(element) : element;\n                elements.reverse().forEach(after.bind(this));\n            }\n        }\n    } else {\n        _each(this, after, element);\n    }\n    return this;\n}\n\n/**\n * Clone a wrapped object.\n *\n * @return {Object} Wrapped collection of cloned nodes.\n * @example\n *     $(element).clone();\n */\n\nfunction clone() {\n    return $(_clone(this));\n}\n\n/**\n * Clone an object\n *\n * @param {String|Node|NodeList|Array} element The element(s) to clone.\n * @return {String|Node|NodeList|Array} The cloned element(s)\n * @private\n */\n\nfunction _clone(element) {\n    if (typeof element === 'string') {\n        return element;\n    } else if (element instanceof Node) {\n        return element.cloneNode(true);\n    } else if ('length' in element) {\n        return [].map.call(element, function(el) {\n            return el.cloneNode(true);\n        });\n    }\n    return element;\n}\n\n/**\n * Specialized iteration, applying `fn` in reversed manner to a clone of each element, but the provided one.\n *\n * @param {NodeList|Array} collection\n * @param {Function} fn\n * @param {Node} element\n * @private\n */\n\nfunction _each(collection, fn, element) {\n    var l = collection.length;\n    while (l--) {\n        var elm = l === 0 ? element : _clone(element);\n        fn.call(collection[l], elm);\n    }\n}\n\n/*\n * Export interface\n */\n\nexport { append, prepend, before, after, clone };\n","/**\n * @module DOM (extra)\n */\n\nimport { each } from './util';\nimport { append, before, after } from './dom';\nimport { $ } from './selector';\n\n/**\n * Append each element in the collection to the specified element(s).\n *\n * @param {Node|NodeList|Object} element What to append the element(s) to. Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').appendTo(container);\n */\n\nfunction appendTo(element) {\n    var context = typeof element === 'string' ? $(element) : element;\n    append.call(context, this);\n    return this;\n}\n\n/*\n * Empty each element in the collection.\n *\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').empty();\n */\n\nfunction empty(){\n    return each(this, function(element) {\n        element.innerHTML = '';\n    });\n}\n\n/**\n * Remove the collection from the DOM.\n *\n * @return {Array} Array containing the removed elements\n * @example\n *     $('.item').remove();\n */\n\nfunction remove() {\n    return each(this, function(element) {\n        if (element.parentNode) {\n            element.parentNode.removeChild(element);\n        }\n    });\n}\n\n/**\n * Replace each element in the collection with the provided new content, and return the array of elements that were replaced.\n *\n * @return {Array} Array containing the replaced elements\n */\n\nfunction replaceWith() {\n    return before.apply(this, arguments).remove();\n}\n\n/**\n * Get the `textContent` from the first, or set the `textContent` of each element in the collection.\n *\n * @param {String} [value]\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').text('New content');\n */\n\nfunction text(value){\n\n    if(value === undefined) {\n        return this[0].textContent;\n    }\n\n    each(this, function(element) {\n        element.textContent = '' + value;\n    });\n\n    return this;\n}\n\n/**\n * Get the `value` from the first, or set the `value` of each element in the collection.\n *\n * @param {String} [value]\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('input.firstName').value('New value');\n */\n\nfunction val(value){\n\n    if(value === undefined) {\n        return this[0].value;\n    }\n\n    each(this, function(element){\n        element.value = value;\n    });\n\n    return this;\n}\n\n/*\n * Export interface\n */\n\nexport { appendTo, empty, remove, replaceWith, text, val };\n","/**\n * @module Events\n */\n\nimport { each } from './util';\nimport { closest } from './selector';\n\n/**\n * Shorthand for `addEventListener`. Supports event delegation if a filter (`selector`) is provided.\n *\n * @param {String} eventNames List of space-separated event types to be added to the element(s)\n * @param {String} [selector] Selector to filter descendants that delegate the event to this element.\n * @param {Function} handler Event handler\n * @param {Boolean} useCapture=false\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').on('click', callback);\n *     $('.container').on('click focus', '.item', handler);\n */\n\nfunction on(eventNames, selector, handler, useCapture) {\n\n    if (typeof selector === 'function') {\n        handler = selector;\n        selector = null;\n    }\n\n    var parts,\n        namespace,\n        eventListener;\n\n    eventNames.split(' ').forEach(function(eventName) {\n\n        parts = eventName.split('.');\n        eventName = parts[0] || null;\n        namespace = parts[1] || null;\n\n        eventListener = proxyHandler(handler);\n\n        each(this, function(element) {\n\n            if (selector) {\n                eventListener = delegateHandler.bind(element, selector, eventListener);\n            }\n\n            element.addEventListener(eventName, eventListener, useCapture || false);\n\n            getHandlers(element).push({\n                eventName: eventName,\n                handler: handler,\n                eventListener: eventListener,\n                selector: selector,\n                namespace: namespace\n            });\n        });\n\n    }, this);\n\n    return this;\n}\n\n/**\n * Shorthand for `removeEventListener`.\n *\n * @param {String} eventNames List of space-separated event types to be removed from the element(s)\n * @param {String} [selector] Selector to filter descendants that undelegate the event to this element.\n * @param {Function} handler Event handler\n * @param {Boolean} useCapture=false\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').off('click', callback);\n *     $('#my-element').off('myEvent myOtherEvent');\n *     $('.item').off();\n */\n\nfunction off(eventNames = '', selector, handler, useCapture) {\n\n    if (typeof selector === 'function') {\n        handler = selector;\n        selector = null;\n    }\n\n    var parts,\n        namespace,\n        handlers;\n\n    eventNames.split(' ').forEach(function(eventName) {\n\n        parts = eventName.split('.');\n        eventName = parts[0] || null;\n        namespace = parts[1] || null;\n\n        each(this, function(element) {\n\n            handlers = getHandlers(element);\n\n            each(handlers.filter(function(item) {\n                return (\n                    (!eventName || item.eventName === eventName) &&\n                    (!namespace || item.namespace === namespace) &&\n                    (!handler || item.handler === handler) &&\n                    (!selector || item.selector === selector));\n            }), function(item) {\n                element.removeEventListener(item.eventName, item.eventListener, useCapture || false);\n                handlers.splice(handlers.indexOf(item), 1);\n            });\n\n            if (!eventName && !namespace && !selector && !handler) {\n                clearHandlers(element);\n            } else if (handlers.length === 0) {\n                clearHandlers(element);\n            }\n\n        });\n\n    }, this);\n\n    return this;\n}\n\n/**\n * Get event handlers from an element\n *\n * @private\n * @param {Node} element\n * @return {Array}\n */\n\nvar eventKeyProp = '__domtastic_event__';\nvar id = 1;\nvar handlers = {};\nvar unusedKeys = [];\n\nfunction getHandlers(element) {\n    if (!element[eventKeyProp]) {\n        element[eventKeyProp] = unusedKeys.length === 0 ? ++id : unusedKeys.pop();\n    }\n    var key = element[eventKeyProp];\n    return handlers[key] || (handlers[key] = []);\n}\n\n/**\n * Clear event handlers for an element\n *\n * @private\n * @param {Node} element\n */\n\nfunction clearHandlers(element) {\n    var key = element[eventKeyProp];\n    if (handlers[key]) {\n        handlers[key] = null;\n        element[key] = null;\n        unusedKeys.push(key);\n    }\n}\n\n/**\n * Function to create a handler that augments the event object with some extra methods,\n * and executes the callback with the event and the event data (i.e. `event.detail`).\n *\n * @private\n * @param handler Callback to execute as `handler(event, data)`\n * @return {Function}\n */\n\nfunction proxyHandler(handler) {\n    return function(event) {\n        handler.call(this, augmentEvent(event), event.detail);\n    };\n}\n\n/**\n * Attempt to augment events and implement something closer to DOM Level 3 Events.\n *\n * @private\n * @param {Object} event\n * @return {Function}\n */\n\nvar augmentEvent = (function() {\n\n    var methodName,\n        eventMethods = {\n            preventDefault: 'isDefaultPrevented',\n            stopImmediatePropagation: 'isImmediatePropagationStopped',\n            stopPropagation: 'isPropagationStopped'\n        },\n        returnTrue = () => true,\n        returnFalse = () => false;\n\n    return function(event) {\n        if (!event.isDefaultPrevented || event.stopImmediatePropagation || event.stopPropagation) {\n            for (methodName in eventMethods) {\n                (function(methodName, testMethodName, originalMethod) {\n                    event[methodName] = function() {\n                        this[testMethodName] = returnTrue;\n                        return originalMethod && originalMethod.apply(this, arguments);\n                    };\n                    event[testMethodName] = returnFalse;\n                }(methodName, eventMethods[methodName], event[methodName]));\n            }\n            if (event._preventDefault) {\n                event.preventDefault();\n            }\n        }\n        return event;\n    }\n\n})();\n\n/**\n * Function to test whether delegated events match the provided `selector` (filter),\n * if the event propagation was stopped, and then actually call the provided event handler.\n * Use `this` instead of `event.currentTarget` on the event object.\n *\n * @private\n * @param {String} selector Selector to filter descendants that undelegate the event to this element.\n * @param {Function} handler Event handler\n * @param {Event} event\n */\n\nfunction delegateHandler(selector, handler, event) {\n    var eventTarget = event._target || event.target,\n        currentTarget = closest.call([eventTarget], selector, this)[0];\n    if (currentTarget && currentTarget !== this) {\n        if (currentTarget === eventTarget || !(event.isPropagationStopped && event.isPropagationStopped())) {\n            handler.call(currentTarget, event);\n        }\n    }\n}\n\nvar bind = on,\n    unbind = off;\n\n/*\n * Export interface\n */\n\nexport { on, off, bind, unbind };\n","/**\n * @module HTML\n */\n\nimport { each } from './util';\n\n/*\n * Get the HTML contents of the first element, or set the HTML contents for each element in the collection.\n *\n * @param {String} [fragment] HTML fragment to set for the element. If this argument is omitted, the HTML contents are returned.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').html();\n *     $('.item').html('<span>more</span>');\n */\n\nfunction html(fragment) {\n\n    if (typeof fragment !== 'string') {\n        var element = this.nodeType ? this : this[0];\n        return element ? element.innerHTML : undefined;\n    }\n\n    each(this, function(element) {\n        element.innerHTML = fragment;\n    });\n\n    return this;\n\n}\n\n/*\n * Export interface\n */\n\nexport { html };\n","/**\n * @module noConflict\n */\n\nimport { global } from './util';\n\n/*\n * Save the previous value of the global `$` variable, so that it can be restored later on.\n * @private\n */\n\nvar previousLib = global.$;\n\n/**\n * In case another library sets the global `$` variable before DOMtastic does,\n * this method can be used to return the global `$` to that other library.\n *\n * @return {Object} Reference to DOMtastic.\n * @example\n *     var domtastic = $.noConflict();\n */\n\nfunction noConflict() {\n    global.$ = previousLib;\n    return this;\n}\n\n/*\n * Export interface\n */\n\nexport { noConflict };\n","/**\n * @module Ready\n */\n\n/**\n * Execute callback when `DOMContentLoaded` fires for `document`, or immediately if called afterwards.\n *\n * @param handler Callback to execute when initial DOM content is loaded.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $(document).ready(callback);\n */\n\nfunction ready(handler) {\n    if (/complete|loaded|interactive/.test(document.readyState) && document.body) {\n        handler();\n    } else {\n        document.addEventListener('DOMContentLoaded', handler, false)\n    }\n    return this;\n}\n\n/*\n * Export interface\n */\n\nexport { ready };\n","/**\n * @module Selector\n */\n\nimport { global, each, uniq } from './util';\n\nvar isPrototypeSet = false,\n    reFragment = /^\\s*<(\\w+|!)[^>]*>/,\n    reSingleTag = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\n    reSimpleSelector = /^[\\.#]?[\\w-]*$/;\n\n/*\n * Versatile wrapper for `querySelectorAll`.\n *\n * @param {String|Node|NodeList|Array} selector Query selector, `Node`, `NodeList`, array of elements, or HTML fragment string.\n * @param {String|Node|NodeList} context=document The context for the selector to query elements.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     var $items = $(.items');\n * @example\n *     var $element = $(domElement);\n * @example\n *     var $list = $(nodeList, document.body);\n * @example\n *     var $element = $('<p>evergreen</p>');\n */\n\nfunction $(selector, context = document) {\n\n    var collection;\n\n    if (!selector) {\n\n        collection = document.querySelectorAll(null);\n\n    } else if (selector instanceof Wrapper) {\n\n        return selector;\n\n    } else if (typeof selector !== 'string') {\n\n        collection = selector.nodeType || selector === window ? [selector] : selector;\n\n    } else if (reFragment.test(selector)) {\n\n        collection = createFragment(selector);\n\n    } else {\n\n        context = typeof context === 'string' ? document.querySelector(context) : context.length ? context[0] : context;\n\n        collection = querySelector(selector, context);\n\n    }\n\n    return wrap(collection);\n\n}\n\n/*\n * Find descendants matching the provided `selector` for each element in the collection.\n *\n * @param {String|Node|NodeList|Array} selector Query selector, `Node`, `NodeList`, array of elements, or HTML fragment string.\n * @return {Object} The wrapped collection\n * @example\n *     $('.selector').find('.deep').$('.deepest');\n */\n\nfunction find(selector) {\n    var nodes = [];\n    each(this, function(node) {\n        each(querySelector(selector, node), function(child) {\n            if(nodes.indexOf(child) === -1) {\n                nodes.push(child);\n            }\n        });\n    });\n    return $(nodes);\n}\n\n/**\n * Return the closest element matching the selector (starting by itself) for each element in the collection.\n *\n * @param {String} selector Filter\n * @param {Object} [context] If provided, matching elements must be a descendant of this element\n * @return {Object} New wrapped collection (containing zero or one element)\n * @chainable\n * @example\n *     $('.selector').closest('.container');\n */\n\nvar closest = (function() {\n\n    function closest(selector, context) {\n        var nodes = [];\n        each(this, function(node) {\n            while (node && node !== context) {\n                if (matches(node, selector)) {\n                    nodes.push(node);\n                    break;\n                }\n                node = node.parentElement;\n            }\n        });\n        return $(uniq(nodes));\n    }\n\n    return !Element.prototype.closest ? closest : function(selector, context) {\n        if(!context) {\n            var nodes = [];\n            each(this, function(node) {\n                var n = node.closest(selector);\n                if(n) {\n                    nodes.push(n);\n                }\n            });\n            return $(uniq(nodes));\n        } else {\n            return closest.call(this, selector, context)\n        }\n    }\n})();\n\n/*\n * Returns `true` if the element would be selected by the specified selector string; otherwise, returns `false`.\n *\n * @param {Node} element Element to test\n * @param {String} selector Selector to match against element\n * @return {Boolean}\n *\n * @example\n *     $.matches(element, '.match');\n */\n\nvar matches = (function() {\n    var context = typeof Element !== 'undefined' ? Element.prototype : global,\n        _matches = context.matches || context.matchesSelector || context.mozMatchesSelector || context.msMatchesSelector || context.oMatchesSelector || context.webkitMatchesSelector;\n    return function(element, selector) {\n        return _matches.call(element, selector);\n    };\n})();\n\n/*\n * Use the faster `getElementById`, `getElementsByClassName` or `getElementsByTagName` over `querySelectorAll` if possible.\n *\n * @private\n * @param {String} selector Query selector.\n * @param {Node} context The context for the selector to query elements.\n * @return {Object} NodeList, HTMLCollection, or Array of matching elements (depending on method used).\n */\n\nfunction querySelector(selector, context) {\n\n    var isSimpleSelector = reSimpleSelector.test(selector);\n\n    if (isSimpleSelector) {\n        if (selector[0] === '#') {\n            var element = (context.getElementById ? context : document).getElementById(selector.slice(1));\n            return element ? [element] : [];\n        }\n        if (selector[0] === '.') {\n            return context.getElementsByClassName(selector.slice(1));\n        }\n        return context.getElementsByTagName(selector);\n    }\n\n    return context.querySelectorAll(selector);\n\n}\n\n/*\n * Create DOM fragment from an HTML string\n *\n * @private\n * @param {String} html String representing HTML.\n * @return {NodeList}\n */\n\nfunction createFragment(html) {\n\n    if (reSingleTag.test(html)) {\n        return [document.createElement(RegExp.$1)];\n    }\n\n    var elements = [],\n        container = document.createElement('div'),\n        children = container.childNodes;\n\n    container.innerHTML = html;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n        elements.push(children[i]);\n    }\n\n    return elements;\n}\n\n/*\n * Calling `$(selector)` returns a wrapped collection of elements.\n *\n * @private\n * @param {NodeList|Array} collection Element(s) to wrap.\n * @return (Object) The wrapped collection\n */\n\nfunction wrap(collection) {\n\n    if (!isPrototypeSet) {\n        Wrapper.prototype = $.fn;\n        Wrapper.prototype.constructor = Wrapper;\n        isPrototypeSet = true;\n    }\n\n    return new Wrapper(collection);\n}\n\n/*\n * Constructor for the Object.prototype strategy\n *\n * @constructor\n * @private\n * @param {NodeList|Array} collection Element(s) to wrap.\n */\n\nfunction Wrapper(collection) {\n    var i = 0, length = collection.length;\n    for (; i < length;) {\n        this[i] = collection[i++];\n    }\n    this.length = length;\n}\n\n/*\n * Export interface\n */\n\nexport { $, find, closest, matches };\n","/**\n * @module Selector (extra)\n */\n\nimport { each, toArray } from './util';\nimport { $, matches } from './selector';\n\n/**\n * Return children of each element in the collection, optionally filtered by a selector.\n *\n * @param {String} [selector] Filter\n * @return {Object} New wrapped collection\n * @chainable\n * @example\n *     $('.selector').children();\n *     $('.selector').children('.filter');\n */\n\nfunction children(selector) {\n    var nodes = [];\n    each(this, function(element) {\n        if(element.children) {\n            each(element.children, function(child) {\n                if (!selector || (selector && matches(child, selector))) {\n                    nodes.push(child);\n                }\n            });\n        }\n    });\n    return $(nodes);\n}\n\n/**\n * Return child nodes of each element in the collection, including text and comment nodes.\n *\n * @return {Object} New wrapped collection\n * @example\n *     $('.selector').contents();\n */\n\nfunction contents() {\n    var nodes = [];\n    each(this, function(element) {\n        nodes.push.apply(nodes, toArray(element.childNodes));\n    });\n    return $(nodes);\n}\n\n/**\n * Return a collection containing only the one at the specified index.\n *\n * @param {Number} index\n * @return {Object} New wrapped collection\n * @chainable\n * @example\n *     $('.items').eq(1)\n *     // The second item; result is the same as doing $($('.items')[1]);\n */\n\nfunction eq(index) {\n    return slice.call(this, index, index + 1);\n}\n\n/**\n * Return the DOM element at the specified index.\n *\n * @param {Number} index\n * @return {Node} Element at the specified index\n * @example\n *     $('.items').get(1)\n *     // The second element; result is the same as doing $('.items')[1];\n */\n\nfunction get(index) {\n    return this[index];\n}\n\n/**\n * Return the parent elements of each element in the collection, optionally filtered by a selector.\n *\n * @param {String} [selector] Filter\n * @return {Object} New wrapped collection\n * @chainable\n * @example\n *     $('.selector').parent();\n *     $('.selector').parent('.filter');\n */\n\nfunction parent(selector) {\n    var nodes = [];\n    each(this, function(element) {\n        if (!selector || (selector && matches(element.parentNode, selector))) {\n            nodes.push(element.parentNode);\n        }\n    });\n    return $(nodes);\n}\n\n/**\n * Return the sibling elements of each element in the collection, optionally filtered by a selector.\n *\n * @param {String} [selector] Filter\n * @return {Object} New wrapped collection\n * @chainable\n * @example\n *     $('.selector').siblings();\n *     $('.selector').siblings('.filter');\n */\n\nfunction siblings(selector) {\n    var nodes = [];\n    each(this, function(element) {\n        each(element.parentNode.children, function(sibling) {\n            if (sibling !== element && (!selector || (selector && matches(sibling, selector)))) {\n                nodes.push(sibling);\n            }\n        });\n    });\n    return $(nodes);\n}\n\n/**\n * Create a new, sliced collection.\n *\n * @param {Number} start\n * @param {Number} end\n * @return {Object} New wrapped collection\n * @example\n *     $('.items').slice(1, 3)\n *     // New wrapped collection containing the second, third, and fourth element.\n */\n\nfunction slice(start, end) {\n    return $([].slice.apply(this, arguments));\n}\n\n/*\n * Export interface\n */\n\nexport { children, contents, eq, get, parent, siblings, slice };\n","/**\n * @module trigger\n */\n\nimport { global, each } from './util';\nimport { contains } from './contains';\n\nvar reMouseEvent = /^(?:mouse|pointer|contextmenu)|click/,\n    reKeyEvent = /^key/;\n\n/**\n * Trigger event at element(s)\n *\n * @param {String} type Type of the event\n * @param {Object} data Data to be sent with the event (`params.detail` will be set to this).\n * @param {Object} [params] Event parameters (optional)\n * @param {Boolean} params.bubbles=true Does the event bubble up through the DOM or not.\n * @param {Boolean} params.cancelable=true Is the event cancelable or not.\n * @param {Mixed} params.detail=undefined Additional information about the event.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').trigger('anyEventType');\n */\n\nfunction trigger(type, data, params = {}) {\n\n    params.bubbles = typeof params.bubbles === 'boolean' ? params.bubbles : true;\n    params.cancelable = typeof params.cancelable === 'boolean' ? params.cancelable : true;\n    params.preventDefault = typeof params.preventDefault === 'boolean' ? params.preventDefault : false;\n    params.detail = data;\n\n    var EventConstructor = getEventConstructor(type),\n        event = new EventConstructor(type, params);\n\n    event._preventDefault = params.preventDefault;\n\n    each(this, function(element) {\n        if (!params.bubbles || isEventBubblingInDetachedTree || isAttachedToDocument(element)) {\n            dispatchEvent(element, event);\n        } else {\n            triggerForPath(element, type, params);\n        }\n    });\n    return this;\n}\n\nfunction getEventConstructor(type) {\n    return supportsOtherEventConstructors ? (reMouseEvent.test(type) ? MouseEvent : (reKeyEvent.test(type) ? KeyboardEvent : CustomEvent)) : CustomEvent;\n}\n\n/**\n * Trigger event at first element in the collection. Similar to `trigger()`, except:\n *\n * - Event does not bubble\n * - Default event behavior is prevented\n * - Only triggers handler for first matching element\n *\n * @param {String} type Type of the event\n * @param {Object} data Data to be sent with the event\n * @example\n *     $('form').triggerHandler('submit');\n */\n\nfunction triggerHandler(type, data) {\n    if (this[0]) {\n        trigger.call(this[0], type, data, {bubbles: false, preventDefault: true});\n    }\n}\n\n/**\n * Check whether the element is attached to (or detached from) the document\n *\n * @private\n * @param {Node} element Element to test\n * @return {Boolean}\n */\n\nfunction isAttachedToDocument(element) {\n    if (element === window || element === document) {\n        return true;\n    }\n    return contains(element.ownerDocument.documentElement, element);\n}\n\n/**\n * Dispatch the event at the element and its ancestors.\n * Required to support delegated events in browsers that don't bubble events in detached DOM trees.\n *\n * @private\n * @param {Node} element First element to dispatch the event at\n * @param {String} type Type of the event\n * @param {Object} [params] Event parameters (optional)\n * @param {Boolean} params.bubbles=true Does the event bubble up through the DOM or not.\n * Will be set to false (but shouldn't matter since events don't bubble anyway).\n * @param {Boolean} params.cancelable=true Is the event cancelable or not.\n * @param {Mixed} params.detail=undefined Additional information about the event.\n */\n\nfunction triggerForPath(element, type, params = {}) {\n    params.bubbles = false;\n    var event = new CustomEvent(type, params);\n    event._target = element;\n    do {\n        dispatchEvent(element, event);\n    } while (element = element.parentNode);\n}\n\n/**\n * Dispatch event to element, but call direct event methods instead if available\n * (e.g. \"blur()\", \"submit()\") and if the event is non-cancelable.\n *\n * @private\n * @param {Node} element Element to dispatch the event at\n * @param {Object} event Event to dispatch\n */\n\nvar directEventMethods = ['blur', 'focus', 'select', 'submit'];\n\nfunction dispatchEvent(element, event) {\n    if(directEventMethods.indexOf(event.type) !== -1 && typeof element[event.type] === 'function' && !event._preventDefault && !event.cancelable) {\n        element[event.type]();\n    } else {\n        element.dispatchEvent(event);\n    }\n}\n\n/**\n * Polyfill for CustomEvent, borrowed from [MDN](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent#Polyfill).\n * Needed to support IE (9, 10, 11) & PhantomJS\n */\n\n(function() {\n    function CustomEvent(event, params = { bubbles: false, cancelable: false, detail: undefined }) {\n        var customEvent = document.createEvent('CustomEvent');\n        customEvent.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n        return customEvent;\n    }\n\n    CustomEvent.prototype = global.CustomEvent && global.CustomEvent.prototype;\n    global.CustomEvent = CustomEvent;\n\n})();\n\n/*\n * Are events bubbling in detached DOM trees?\n * @private\n */\n\nvar isEventBubblingInDetachedTree = (function() {\n    var isBubbling = false,\n        doc = global.document;\n    if (doc) {\n        var parent = doc.createElement('div'),\n            child = parent.cloneNode();\n        parent.appendChild(child);\n        parent.addEventListener('e', function() {\n            isBubbling = true;\n        });\n        child.dispatchEvent(new CustomEvent('e', { bubbles: true }));\n    }\n    return isBubbling;\n})();\n\nvar supportsOtherEventConstructors = (function() {\n    try {\n        new window.MouseEvent('click');\n    } catch (e) {\n        return false;\n    }\n    return true;\n})();\n\n/*\n * Export interface\n */\n\nexport { trigger, triggerHandler };\n","/**\n * @module Type\n */\n\n/*\n * Determine if the argument passed is a Javascript function object.\n *\n * @param {Object} [obj] Object to test whether or not it is a function.\n * @return {boolean} \n * @example\n *     $.isFunction(function(){});\n *     // true\n * @example\n *     $.isFunction({});\n *     // false\n */\n\nfunction isFunction(obj) {\n    return (typeof obj === 'function');\n}\n\n/*\n * Determine whether the argument is an array.\n *\n * @param {Object} [obj] Object to test whether or not it is an array.\n * @return {boolean} \n * @example\n *     $.isArray([]);\n *     // true\n * @example\n *     $.isArray({});\n *     // false\n */\n\nvar isArray = Array.isArray;\n\n/*\n * Export interface\n */\n\nexport { isArray, isFunction };\n","/*\n * @module Util\n */\n\n/*\n * Reference to the global scope\n * @private\n */\n\nvar global = new Function(\"return this\")();\n\n/**\n * Convert `NodeList` to `Array`.\n *\n * @param {NodeList|Array} collection\n * @return {Array}\n * @private\n */\n\nfunction toArray(collection) {\n    var length = collection.length,\n        result = new Array(length);\n    for (var i = 0; i < length; i++) {\n        result[i] = collection[i];\n    }\n    return result;\n}\n\n/**\n * Faster alternative to [].forEach method\n *\n * @param {Node|NodeList|Array} collection\n * @param {Function} callback\n * @return {Node|NodeList|Array}\n * @private\n */\n\nfunction each(collection, callback, thisArg) {\n    var length = collection.length;\n    if (length !== undefined && collection.nodeType === undefined) {\n        for (var i = 0; i < length; i++){\n            callback.call(thisArg, collection[i], i, collection);\n        }\n    } else {\n        callback.call(thisArg, collection, 0, collection);\n    }\n    return collection;\n}\n\n/**\n * Assign enumerable properties from source object(s) to target object\n *\n * @method extend\n * @param {Object} target Object to extend\n * @param {Object} [source] Object to extend from\n * @return {Object} Extended object\n * @example\n *     $.extend({a: 1}, {b: 2});\n *     // {a: 1, b: 2}\n * @example\n *     $.extend({a: 1}, {b: 2}, {a: 3});\n *     // {a: 3, b: 2}\n */\n\nfunction extend(target, ...sources) {\n    sources.forEach(function(src) {\n        for (var prop in src) {\n            target[prop] = src[prop];\n        }\n    });\n    return target;\n}\n\n/**\n * Return the collection without duplicates\n *\n * @param collection Collection to remove duplicates from\n * @return {Node|NodeList|Array}\n * @private\n */\n\nfunction uniq(collection) {\n    return collection.filter(function(item, index) {\n        return collection.indexOf(item) === index;\n    })\n}\n\n/*\n * Export interface\n */\n\nexport { global, toArray, each, extend, uniq };\n","/**\n * @module API\n */\n\nimport { extend } from './util';\n\nvar api = {},\n    $ = {};\n\n// Import modules to build up the API\n\nimport * as array from './array';\nimport * as attr from './attr';\nimport * as class_ from './class';\nimport * as contains from './contains';\nimport * as css from './css';\nimport * as data from './data';\nimport * as dom from './dom';\nimport * as dom_extra from './dom_extra';\nimport * as event from './event';\nimport * as html from './html';\nimport * as noconflict from './noconflict';\nimport * as ready from './ready';\nimport * as selector from './selector';\nimport * as selector_extra from './selector_extra';\nimport * as trigger from './trigger';\nimport * as type from './type';\n\nif (typeof selector !== 'undefined') {\n    $ = selector.$;\n    $.matches = selector.matches;\n    api.find = selector.find;\n    api.closest = selector.closest;\n}\n\nextend($, contains, noconflict, type);\nextend(api, array, attr, class_, css, data, dom, dom_extra, event, html, ready, selector_extra, trigger);\n\n$.fn = api;\n\n// Version\n\n$.version = '__VERSION__';\n\n// Util\n\n$.extend = extend;\n\n// Export interface\n\nexport default $;\n"]}